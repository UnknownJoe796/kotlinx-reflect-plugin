buildscript {
    ext.kotlinVersion = '1.2.51'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.kotlinVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.3"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    google()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "idea"
apply plugin: "bintray"
apply plugin: "maven-publish"
apply plugin: 'java-gradle-plugin'
apply plugin: 'application'

mainClassName = 'com.lightningkite.kotlinx.reflection.plugin.MainKt'

gradlePlugin {
    plugins {
        examplePlugin {
            id = "com.lightningkite.kotlinx.reflection"
            implementationClass = "com.lightningkite.kotlinx.reflection.plugin.gradle.ReflectPlugin"
        }
    }
}

group = 'com.lightningkite.kotlinx'
version = '1.0.0'


dependencies {
    def libraryVersion = "0.5.0"
    implementation gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "com.lightningkite.kotlinx:jvm:${libraryVersion}"
    implementation group: 'org.antlr', name: 'antlr4-runtime', version: '4.5'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "ivieleague"
            name "Joseph Ivie"
            email "josephivie@gmail.com"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A simple “Hello World” Gradle plugin')
                root.children().last() + pomConfig
            }
        }
    }
}

//bintray {
//    user = bintrayUser
//    key = bintrayKey
//    publications = ['mavenJava']
//    pkg {
//        userOrg = 'gradle'
//        repo = 'gradle-plugins'
//        name = 'gradle-hello-world-plugin'
//        desc = "The “Hello World” of Gradle plugins. Adds a task named ‘helloWorld’ that, you guessed it, prints “Hello world!”"
//        licenses = ['Apache-2.0']
//        labels = ["publish"]
//    }
//} }